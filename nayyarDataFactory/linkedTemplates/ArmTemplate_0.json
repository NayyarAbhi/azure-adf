{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nayyarDataFactory"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/feed_prospect_prospectidentifier')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "container-sql-to-blob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/table_prospect')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "prospect_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "brand_identifier",
						"type": "varchar"
					},
					{
						"name": "channel_identifier",
						"type": "varchar"
					},
					{
						"name": "first_name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "prospect",
					"table": "tbl_prospect"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/table_prospect_identifiers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "prospect_identifier_id",
						"type": "varchar"
					},
					{
						"name": "prospect_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "identifier",
						"type": "varchar"
					},
					{
						"name": "identifier_type",
						"type": "varchar"
					},
					{
						"name": "active_from",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "active_to",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "prospect",
					"table": "tbl_prospect_identifiers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_to_blob_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "table_prospect",
								"type": "DatasetReference"
							},
							"name": "prospect"
						},
						{
							"dataset": {
								"referenceName": "table_prospect_identifiers",
								"type": "DatasetReference"
							},
							"name": "prospectIdentifier"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "feed_prospect_prospectidentifier",
								"type": "DatasetReference"
							},
							"name": "blobStorage"
						}
					],
					"transformations": [
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          prospect_id as integer,",
						"          created_on as timestamp,",
						"          brand_identifier as string,",
						"          channel_identifier as string,",
						"          first_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT * FROM [prospect].[tbl_prospect]',",
						"     format: 'query') ~> prospect",
						"source(output(",
						"          prospect_identifier_id as string,",
						"          prospect_id as integer,",
						"          identifier as string,",
						"          identifier_type as string,",
						"          active_from as timestamp,",
						"          active_to as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT \\nprospect_id,\\nprospect_identifier_id as identifier_1_id,\\nidentifier_type as identifier_1_type,\\nidentifier as identifier_1_value,\\nactive_from as identifier_1_active_from,\\nactive_to as identifier_1_active_to\\nFROM [prospect].[tbl_prospect_identifiers]',",
						"     format: 'query') ~> prospectIdentifier",
						"prospect, prospectIdentifier join(prospect@prospect_id == prospectIdentifier@prospect_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> blobStorage"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/table_prospect')]",
				"[concat(variables('factoryId'), '/datasets/table_prospect_identifiers')]",
				"[concat(variables('factoryId'), '/datasets/feed_prospect_prospectidentifier')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_to_blob_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sql_to_blob",
						"description": "Data from ProspectTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "sql_to_blob_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"prospect": {},
									"prospectIdentifier": {},
									"blobStorage": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-26T23:10:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/sql_to_blob_dataflow')]"
			]
		}
	]
}